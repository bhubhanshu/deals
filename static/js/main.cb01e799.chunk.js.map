{"version":3,"sources":["redux/ActionCreators.js","redux/ActionTypes.js","components/CarouselComponent.js","components/MainComponent.js","redux/deals.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["DealsFailed","errmess","type","payload","addDeals","Deals","Carousels","Carousel","Item","href","target","className","src","alt","Header","Footer","Main","this","props","fetchDeals","id","Component","withRouter","connect","state","deals","dispatch","fetch","then","response","ok","error","Error","status","statusText","message","json","catch","isLoading","errMess","action","store","createStore","combineReducers","applyMiddleware","thunk","logger","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.cb01e799.chunk.js","sourcesContent":["import * as ActionTypes from './ActionTypes';\n\nexport const fetchDeals = () => (dispatch) => {\n    return fetch('../../webScraper/data.json')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(Deals => dispatch(addDeals(Deals)))\n        .catch(error => dispatch(DealsFailed(error.message)));\n}\n\nexport const DealsFailed = (errmess) => ({\n    type: ActionTypes.DEALS_FAILED,\n    payload: errmess\n});\n\nexport const addDeals = (Deals) => ({\n    type: ActionTypes.ADD_DEALS,\n    payload: Deals\n});","export const ADD_DEALS = 'ADD_DEALS';\nexport const DEALS_FAILED = 'DEALS_FAILED';","import React from 'react';\nimport Carousel from 'react-bootstrap/Carousel'\n\nconst items = [\n    {\n        src: 'https://cdn1.desidime.com/cdn-cgi/image/fit=contain,f=auto,onerror=redirect,w=640,h=360,q=90/ddb/sale/oct20/Flipakrt-The-Big-Billion-Days-Oct-2020-2.jpg',\n        altText: 'Flipkart',\n        key: '1'\n    },\n    {\n        src: 'https://cdn1.desidime.com/cdn-cgi/image/fit=contain,f=auto,onerror=redirect,w=640,h=360,q=90/ddb/sale/oct20/myntra-sale-Oct2020.jpg',\n        altText: 'Myntra',\n        key: '2'\n    },\n    {\n        src: 'https://cdn3.desidime.com/cdn-cgi/image/fit=contain,f=auto,onerror=redirect,w=640,h=360,q=80/ddb/sale/oct20/Amazon-GIF-Oct2020-3.jpg',\n        altText: 'Amazon',\n        key: '3'\n    }\n];\n\nconst Carousels = () => {\n    return (\n        <Carousel>\n            <Carousel.Item>\n                <a href=\"https://www.flipkart.com\" target=\"_blank\"><img\n                    className=\"d-block w-100\"\n                    src=\"https://cdn1.desidime.com/cdn-cgi/image/fit=contain,f=auto,onerror=redirect,w=640,h=360,q=90/ddb/sale/oct20/Flipakrt-The-Big-Billion-Days-Oct-2020-2.jpg\"\n                    alt=\"Flipkart\"\n                /></a>\n            </Carousel.Item>\n            <Carousel.Item>\n                <a href=\"https://www.myntra.com\" target=\"_blank\"><img\n                    className=\"d-block w-100\"\n                    src=\"https://cdn1.desidime.com/cdn-cgi/image/fit=contain,f=auto,onerror=redirect,w=640,h=360,q=90/ddb/sale/oct20/myntra-sale-Oct2020.jpg\"\n                    alt=\"Myntra\"\n                /></a>\n            </Carousel.Item>\n            <Carousel.Item>\n                <a href=\"https://www.amazon.in\" target=\"_blank\"><img\n                    className=\"d-block w-100\"\n                    src=\"https://cdn3.desidime.com/cdn-cgi/image/fit=contain,f=auto,onerror=redirect,w=640,h=360,q=80/ddb/sale/oct20/Amazon-GIF-Oct2020-3.jpg\"\n                    alt=\"Amazon\"\n                /></a>\n            </Carousel.Item>\n        </Carousel>\n    );\n}\n\nexport default Carousels;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchDeals } from '../redux/ActionCreators';\nimport Carousel from './CarouselComponent';\n\nconst mapStateToProps = state => {\n    return {\n      deals: state.deals\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchDeals: () => {dispatch(fetchDeals())}\n  });\n\n\nfunction Header() {\n    return (\n        <div className=\"container-fluid p-3\">\n            <div className=\"row justify-content-center\">\n                <h1>Loot Deals</h1>\n            </div>\n        </div>\n    );\n}\n\nfunction Footer() {\n    return(\n        <div className=\"footer mt-5\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-12\">\n                        <div className=\"text-center\">\n                            <h5>Socials</h5>\n                            <a className=\"fa fa-facebook\" href=\"https://www.facebook.com/bhubhanshu.gurjar\"></a> &nbsp;\n                            <a className=\"fa fa-linkedin\" href=\"https://www.linkedin.com/in/bhubhanshu/\"></a> &nbsp;\n                            <a className=\"fa fa-github\" href=\"https://www.github.com/bhubhanshu/\"></a> &nbsp;\n                        </div>\n                    </div>\n                </div>\n                <hr></hr>\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-auto\">\n                        <h5>Â© Copyright 2020 Bhubhanshu Gurjar</h5>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-auto\">\n                        <h5>Built using ReactJS</h5>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nclass Main extends Component {\n    componentDidMount() {\n        this.props.fetchDeals();\n    }\n    render() {\n        return( \n            <div id=\"body\">\n                <Header />\n                <Carousel />\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\n\nexport const Deals = (state = {\n        isLoading: true,\n        errMess: null,\n        deals: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_DEALS:\n            return {...state, isLoading: false, errMess: null, deals: action.payload};\n\n        case ActionTypes.DEALS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, deals: []};\n            \n        default:\n            return state;\n    }\n}","import React from 'react';\nimport './App.css';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nconst store = ConfigureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <div>\n          <Main />\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { Deals } from './deals';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            deals: Deals,\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}